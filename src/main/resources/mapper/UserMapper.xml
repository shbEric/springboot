<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.super404.springboot.mapper.UserXmlMapper">
    <select id="findAll" resultType="com.super404.springboot.domain.User">
        select t.id, t.name, t.phone, t.create_time as createTime, t.age from user t;
    </select>
    <delete id="deleteByXml" parameterType="Long">
        DELETE FROM user WHERE id =#{userId};
    </delete>
    <update id="updateByXml" parameterType="com.super404.springboot.domain.User">
        UPDATE user SET name=#{name} WHERE id =#{id};
    </update>
    <select id="findByIdByXml" parameterType="Long" resultType="com.super404.springboot.domain.User">
        SELECT t.id, t.name, t.phone, t.create_time as createTime, t.age FROM user t WHERE t.id = #{id}
    </select>
    <!--获取数据库自增id，keyProperty是JAVA对象的属性，keyColumn表示数据库的字段-->
    <insert id="insertByXml" parameterType="com.super404.springboot.domain.User"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user(name,phone,create_time,age) VALUES(#{name}, #{phone}, #{createTime}, #{age});
    </insert>
    
    <!--多个参数输入时，不需要写parameterType参数
    有多种方式：
    1、改用#｛index｝是第几个就用第几个的索引，索引从0开始，select t.* from tableName where id = #{0} and name = #{1}；
    2、@Param来指定哪一个；
    3、用java bean封装；
    4、用map封装，和3类似；
    5、用List封装，
                    select ... from XXX where id in
                　　<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
                　　　　#{item}
                　　</foreach>
    -->
    <update id="updateByXmlUseParam">
        UPDATE user SET name=#{name} WHERE id =#{id};
    </update>
</mapper>